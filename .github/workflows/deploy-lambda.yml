name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
  MODEL_URI: ${{ secrets.MODEL_URI }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

jobs:

  deploy-lambda:
    name: Deploy to Lambda
    runs-on: ubuntu-latest

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create Lambda function
      run: |
        aws lambda create-function \
          --function-name StyleTransferFunction \
          --code ImageUri=873393246907.dkr.ecr.ap-south-1.amazonaws.com/$ECR_REPOSITORY/neural-style-transfer:v1 \
          --role "arn:aws:iam::873393246907:role/StyleTransferFunction" \
          --package-type Image \
          --environment "Variables={AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY,AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION,MLFLOW_TRACKING_URI=$MLFLOW_TRACKING_URI,MLFLOW_TRACKING_USERNAME=$MLFLOW_TRACKING_USERNAME,MLFLOW_TRACKING_PASSWORD=$MLFLOW_TRACKING_PASSWORD,MODEL_URI=$MODEL_URI}" \
          --architecture x86_64
    
    - name: Deploy to Lambda
      env:
        FUNCTION_NAME: StyleTransferFunction
      run: |
        aws lambda update-function-code --function-name $FUNCTION_NAME --image-uri 873393246907.dkr.ecr.ap-south-1.amazonaws.com/$ECR_REPOSITORY/neural-style-transfer:v1